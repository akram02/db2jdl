/*
 * This file is generated by jOOQ.
 */
package com.example.postgresqinformationschema;


import com.example.postgresqinformationschema.tables.AdministrableRoleAuthorizations;
import com.example.postgresqinformationschema.tables.ApplicableRoles;
import com.example.postgresqinformationschema.tables.Attributes;
import com.example.postgresqinformationschema.tables.CharacterSets;
import com.example.postgresqinformationschema.tables.CheckConstraintRoutineUsage;
import com.example.postgresqinformationschema.tables.CheckConstraints;
import com.example.postgresqinformationschema.tables.CollationCharacterSetApplicability;
import com.example.postgresqinformationschema.tables.Collations;
import com.example.postgresqinformationschema.tables.ColumnDomainUsage;
import com.example.postgresqinformationschema.tables.ColumnOptions;
import com.example.postgresqinformationschema.tables.ColumnPrivileges;
import com.example.postgresqinformationschema.tables.ColumnUdtUsage;
import com.example.postgresqinformationschema.tables.Columns;
import com.example.postgresqinformationschema.tables.ConstraintColumnUsage;
import com.example.postgresqinformationschema.tables.ConstraintTableUsage;
import com.example.postgresqinformationschema.tables.DataTypePrivileges;
import com.example.postgresqinformationschema.tables.DomainConstraints;
import com.example.postgresqinformationschema.tables.DomainUdtUsage;
import com.example.postgresqinformationschema.tables.Domains;
import com.example.postgresqinformationschema.tables.ElementTypes;
import com.example.postgresqinformationschema.tables.EnabledRoles;
import com.example.postgresqinformationschema.tables.ForeignDataWrapperOptions;
import com.example.postgresqinformationschema.tables.ForeignDataWrappers;
import com.example.postgresqinformationschema.tables.ForeignServerOptions;
import com.example.postgresqinformationschema.tables.ForeignServers;
import com.example.postgresqinformationschema.tables.ForeignTableOptions;
import com.example.postgresqinformationschema.tables.ForeignTables;
import com.example.postgresqinformationschema.tables.InformationSchemaCatalogName;
import com.example.postgresqinformationschema.tables.KeyColumnUsage;
import com.example.postgresqinformationschema.tables.Parameters;
import com.example.postgresqinformationschema.tables.ReferentialConstraints;
import com.example.postgresqinformationschema.tables.RoleColumnGrants;
import com.example.postgresqinformationschema.tables.RoleRoutineGrants;
import com.example.postgresqinformationschema.tables.RoleTableGrants;
import com.example.postgresqinformationschema.tables.RoleUdtGrants;
import com.example.postgresqinformationschema.tables.RoleUsageGrants;
import com.example.postgresqinformationschema.tables.RoutinePrivileges;
import com.example.postgresqinformationschema.tables.Routines;
import com.example.postgresqinformationschema.tables.Schemata;
import com.example.postgresqinformationschema.tables.Sequences;
import com.example.postgresqinformationschema.tables.SqlFeatures;
import com.example.postgresqinformationschema.tables.SqlImplementationInfo;
import com.example.postgresqinformationschema.tables.SqlLanguages;
import com.example.postgresqinformationschema.tables.SqlPackages;
import com.example.postgresqinformationschema.tables.SqlParts;
import com.example.postgresqinformationschema.tables.SqlSizing;
import com.example.postgresqinformationschema.tables.SqlSizingProfiles;
import com.example.postgresqinformationschema.tables.TableConstraints;
import com.example.postgresqinformationschema.tables.TablePrivileges;
import com.example.postgresqinformationschema.tables.Tables;
import com.example.postgresqinformationschema.tables.Transforms;
import com.example.postgresqinformationschema.tables.TriggeredUpdateColumns;
import com.example.postgresqinformationschema.tables.Triggers;
import com.example.postgresqinformationschema.tables.UdtPrivileges;
import com.example.postgresqinformationschema.tables.UsagePrivileges;
import com.example.postgresqinformationschema.tables.UserDefinedTypes;
import com.example.postgresqinformationschema.tables.UserMappingOptions;
import com.example.postgresqinformationschema.tables.UserMappings;
import com.example.postgresqinformationschema.tables.ViewColumnUsage;
import com.example.postgresqinformationschema.tables.ViewRoutineUsage;
import com.example.postgresqinformationschema.tables.ViewTableUsage;
import com.example.postgresqinformationschema.tables.Views;
import com.example.postgresqinformationschema.tables._PgExpandarray;
import com.example.postgresqinformationschema.tables._PgForeignDataWrappers;
import com.example.postgresqinformationschema.tables._PgForeignServers;
import com.example.postgresqinformationschema.tables._PgForeignTableColumns;
import com.example.postgresqinformationschema.tables._PgForeignTables;
import com.example.postgresqinformationschema.tables._PgUserMappings;
import com.example.postgresqinformationschema.tables.records._PgExpandarrayRecord;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Catalog;
import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Result;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InformationSchema extends SchemaImpl {

    private static final long serialVersionUID = 547805230;

    /**
     * The reference instance of <code>information_schema</code>
     */
    public static final InformationSchema INFORMATION_SCHEMA = new InformationSchema();

    /**
     * The table <code>information_schema.administrable_role_authorizations</code>.
     */
    public final AdministrableRoleAuthorizations ADMINISTRABLE_ROLE_AUTHORIZATIONS = com.example.postgresqinformationschema.tables.AdministrableRoleAuthorizations.ADMINISTRABLE_ROLE_AUTHORIZATIONS;

    /**
     * The table <code>information_schema.applicable_roles</code>.
     */
    public final ApplicableRoles APPLICABLE_ROLES = com.example.postgresqinformationschema.tables.ApplicableRoles.APPLICABLE_ROLES;

    /**
     * The table <code>information_schema.attributes</code>.
     */
    public final Attributes ATTRIBUTES = com.example.postgresqinformationschema.tables.Attributes.ATTRIBUTES;

    /**
     * The table <code>information_schema.character_sets</code>.
     */
    public final CharacterSets CHARACTER_SETS = com.example.postgresqinformationschema.tables.CharacterSets.CHARACTER_SETS;

    /**
     * The table <code>information_schema.check_constraint_routine_usage</code>.
     */
    public final CheckConstraintRoutineUsage CHECK_CONSTRAINT_ROUTINE_USAGE = com.example.postgresqinformationschema.tables.CheckConstraintRoutineUsage.CHECK_CONSTRAINT_ROUTINE_USAGE;

    /**
     * The table <code>information_schema.check_constraints</code>.
     */
    public final CheckConstraints CHECK_CONSTRAINTS = com.example.postgresqinformationschema.tables.CheckConstraints.CHECK_CONSTRAINTS;

    /**
     * The table <code>information_schema.collation_character_set_applicability</code>.
     */
    public final CollationCharacterSetApplicability COLLATION_CHARACTER_SET_APPLICABILITY = com.example.postgresqinformationschema.tables.CollationCharacterSetApplicability.COLLATION_CHARACTER_SET_APPLICABILITY;

    /**
     * The table <code>information_schema.collations</code>.
     */
    public final Collations COLLATIONS = com.example.postgresqinformationschema.tables.Collations.COLLATIONS;

    /**
     * The table <code>information_schema.column_domain_usage</code>.
     */
    public final ColumnDomainUsage COLUMN_DOMAIN_USAGE = com.example.postgresqinformationschema.tables.ColumnDomainUsage.COLUMN_DOMAIN_USAGE;

    /**
     * The table <code>information_schema.column_options</code>.
     */
    public final ColumnOptions COLUMN_OPTIONS = com.example.postgresqinformationschema.tables.ColumnOptions.COLUMN_OPTIONS;

    /**
     * The table <code>information_schema.column_privileges</code>.
     */
    public final ColumnPrivileges COLUMN_PRIVILEGES = com.example.postgresqinformationschema.tables.ColumnPrivileges.COLUMN_PRIVILEGES;

    /**
     * The table <code>information_schema.columns</code>.
     */
    public final Columns COLUMNS = com.example.postgresqinformationschema.tables.Columns.COLUMNS;

    /**
     * The table <code>information_schema.column_udt_usage</code>.
     */
    public final ColumnUdtUsage COLUMN_UDT_USAGE = com.example.postgresqinformationschema.tables.ColumnUdtUsage.COLUMN_UDT_USAGE;

    /**
     * The table <code>information_schema.constraint_column_usage</code>.
     */
    public final ConstraintColumnUsage CONSTRAINT_COLUMN_USAGE = com.example.postgresqinformationschema.tables.ConstraintColumnUsage.CONSTRAINT_COLUMN_USAGE;

    /**
     * The table <code>information_schema.constraint_table_usage</code>.
     */
    public final ConstraintTableUsage CONSTRAINT_TABLE_USAGE = com.example.postgresqinformationschema.tables.ConstraintTableUsage.CONSTRAINT_TABLE_USAGE;

    /**
     * The table <code>information_schema.data_type_privileges</code>.
     */
    public final DataTypePrivileges DATA_TYPE_PRIVILEGES = com.example.postgresqinformationschema.tables.DataTypePrivileges.DATA_TYPE_PRIVILEGES;

    /**
     * The table <code>information_schema.domain_constraints</code>.
     */
    public final DomainConstraints DOMAIN_CONSTRAINTS = com.example.postgresqinformationschema.tables.DomainConstraints.DOMAIN_CONSTRAINTS;

    /**
     * The table <code>information_schema.domains</code>.
     */
    public final Domains DOMAINS = com.example.postgresqinformationschema.tables.Domains.DOMAINS;

    /**
     * The table <code>information_schema.domain_udt_usage</code>.
     */
    public final DomainUdtUsage DOMAIN_UDT_USAGE = com.example.postgresqinformationschema.tables.DomainUdtUsage.DOMAIN_UDT_USAGE;

    /**
     * The table <code>information_schema.element_types</code>.
     */
    public final ElementTypes ELEMENT_TYPES = com.example.postgresqinformationschema.tables.ElementTypes.ELEMENT_TYPES;

    /**
     * The table <code>information_schema.enabled_roles</code>.
     */
    public final EnabledRoles ENABLED_ROLES = com.example.postgresqinformationschema.tables.EnabledRoles.ENABLED_ROLES;

    /**
     * The table <code>information_schema.foreign_data_wrapper_options</code>.
     */
    public final ForeignDataWrapperOptions FOREIGN_DATA_WRAPPER_OPTIONS = com.example.postgresqinformationschema.tables.ForeignDataWrapperOptions.FOREIGN_DATA_WRAPPER_OPTIONS;

    /**
     * The table <code>information_schema.foreign_data_wrappers</code>.
     */
    public final ForeignDataWrappers FOREIGN_DATA_WRAPPERS = com.example.postgresqinformationschema.tables.ForeignDataWrappers.FOREIGN_DATA_WRAPPERS;

    /**
     * The table <code>information_schema.foreign_server_options</code>.
     */
    public final ForeignServerOptions FOREIGN_SERVER_OPTIONS = com.example.postgresqinformationschema.tables.ForeignServerOptions.FOREIGN_SERVER_OPTIONS;

    /**
     * The table <code>information_schema.foreign_servers</code>.
     */
    public final ForeignServers FOREIGN_SERVERS = com.example.postgresqinformationschema.tables.ForeignServers.FOREIGN_SERVERS;

    /**
     * The table <code>information_schema.foreign_table_options</code>.
     */
    public final ForeignTableOptions FOREIGN_TABLE_OPTIONS = com.example.postgresqinformationschema.tables.ForeignTableOptions.FOREIGN_TABLE_OPTIONS;

    /**
     * The table <code>information_schema.foreign_tables</code>.
     */
    public final ForeignTables FOREIGN_TABLES = com.example.postgresqinformationschema.tables.ForeignTables.FOREIGN_TABLES;

    /**
     * The table <code>information_schema.information_schema_catalog_name</code>.
     */
    public final InformationSchemaCatalogName INFORMATION_SCHEMA_CATALOG_NAME = com.example.postgresqinformationschema.tables.InformationSchemaCatalogName.INFORMATION_SCHEMA_CATALOG_NAME;

    /**
     * The table <code>information_schema.key_column_usage</code>.
     */
    public final KeyColumnUsage KEY_COLUMN_USAGE = com.example.postgresqinformationschema.tables.KeyColumnUsage.KEY_COLUMN_USAGE;

    /**
     * The table <code>information_schema.parameters</code>.
     */
    public final Parameters PARAMETERS = com.example.postgresqinformationschema.tables.Parameters.PARAMETERS;

    /**
     * The table <code>information_schema._pg_expandarray</code>.
     */
    public final _PgExpandarray _PG_EXPANDARRAY = com.example.postgresqinformationschema.tables._PgExpandarray._PG_EXPANDARRAY;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<_PgExpandarrayRecord> _PG_EXPANDARRAY(Configuration configuration, Object __1) {
        return configuration.dsl().selectFrom(com.example.postgresqinformationschema.tables._PgExpandarray._PG_EXPANDARRAY.call(__1)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static _PgExpandarray _PG_EXPANDARRAY(Object __1) {
        return com.example.postgresqinformationschema.tables._PgExpandarray._PG_EXPANDARRAY.call(__1);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static _PgExpandarray _PG_EXPANDARRAY(Field<Object> __1) {
        return com.example.postgresqinformationschema.tables._PgExpandarray._PG_EXPANDARRAY.call(__1);
    }

    /**
     * The table <code>information_schema._pg_foreign_data_wrappers</code>.
     */
    public final _PgForeignDataWrappers _PG_FOREIGN_DATA_WRAPPERS = com.example.postgresqinformationschema.tables._PgForeignDataWrappers._PG_FOREIGN_DATA_WRAPPERS;

    /**
     * The table <code>information_schema._pg_foreign_servers</code>.
     */
    public final _PgForeignServers _PG_FOREIGN_SERVERS = com.example.postgresqinformationschema.tables._PgForeignServers._PG_FOREIGN_SERVERS;

    /**
     * The table <code>information_schema._pg_foreign_table_columns</code>.
     */
    public final _PgForeignTableColumns _PG_FOREIGN_TABLE_COLUMNS = com.example.postgresqinformationschema.tables._PgForeignTableColumns._PG_FOREIGN_TABLE_COLUMNS;

    /**
     * The table <code>information_schema._pg_foreign_tables</code>.
     */
    public final _PgForeignTables _PG_FOREIGN_TABLES = com.example.postgresqinformationschema.tables._PgForeignTables._PG_FOREIGN_TABLES;

    /**
     * The table <code>information_schema._pg_user_mappings</code>.
     */
    public final _PgUserMappings _PG_USER_MAPPINGS = com.example.postgresqinformationschema.tables._PgUserMappings._PG_USER_MAPPINGS;

    /**
     * The table <code>information_schema.referential_constraints</code>.
     */
    public final ReferentialConstraints REFERENTIAL_CONSTRAINTS = com.example.postgresqinformationschema.tables.ReferentialConstraints.REFERENTIAL_CONSTRAINTS;

    /**
     * The table <code>information_schema.role_column_grants</code>.
     */
    public final RoleColumnGrants ROLE_COLUMN_GRANTS = com.example.postgresqinformationschema.tables.RoleColumnGrants.ROLE_COLUMN_GRANTS;

    /**
     * The table <code>information_schema.role_routine_grants</code>.
     */
    public final RoleRoutineGrants ROLE_ROUTINE_GRANTS = com.example.postgresqinformationschema.tables.RoleRoutineGrants.ROLE_ROUTINE_GRANTS;

    /**
     * The table <code>information_schema.role_table_grants</code>.
     */
    public final RoleTableGrants ROLE_TABLE_GRANTS = com.example.postgresqinformationschema.tables.RoleTableGrants.ROLE_TABLE_GRANTS;

    /**
     * The table <code>information_schema.role_udt_grants</code>.
     */
    public final RoleUdtGrants ROLE_UDT_GRANTS = com.example.postgresqinformationschema.tables.RoleUdtGrants.ROLE_UDT_GRANTS;

    /**
     * The table <code>information_schema.role_usage_grants</code>.
     */
    public final RoleUsageGrants ROLE_USAGE_GRANTS = com.example.postgresqinformationschema.tables.RoleUsageGrants.ROLE_USAGE_GRANTS;

    /**
     * The table <code>information_schema.routine_privileges</code>.
     */
    public final RoutinePrivileges ROUTINE_PRIVILEGES = com.example.postgresqinformationschema.tables.RoutinePrivileges.ROUTINE_PRIVILEGES;

    /**
     * The table <code>information_schema.routines</code>.
     */
    public final Routines ROUTINES = com.example.postgresqinformationschema.tables.Routines.ROUTINES;

    /**
     * The table <code>information_schema.schemata</code>.
     */
    public final Schemata SCHEMATA = com.example.postgresqinformationschema.tables.Schemata.SCHEMATA;

    /**
     * The table <code>information_schema.sequences</code>.
     */
    public final Sequences SEQUENCES = com.example.postgresqinformationschema.tables.Sequences.SEQUENCES;

    /**
     * The table <code>information_schema.sql_features</code>.
     */
    public final SqlFeatures SQL_FEATURES = com.example.postgresqinformationschema.tables.SqlFeatures.SQL_FEATURES;

    /**
     * The table <code>information_schema.sql_implementation_info</code>.
     */
    public final SqlImplementationInfo SQL_IMPLEMENTATION_INFO = com.example.postgresqinformationschema.tables.SqlImplementationInfo.SQL_IMPLEMENTATION_INFO;

    /**
     * The table <code>information_schema.sql_languages</code>.
     */
    public final SqlLanguages SQL_LANGUAGES = com.example.postgresqinformationschema.tables.SqlLanguages.SQL_LANGUAGES;

    /**
     * The table <code>information_schema.sql_packages</code>.
     */
    public final SqlPackages SQL_PACKAGES = com.example.postgresqinformationschema.tables.SqlPackages.SQL_PACKAGES;

    /**
     * The table <code>information_schema.sql_parts</code>.
     */
    public final SqlParts SQL_PARTS = com.example.postgresqinformationschema.tables.SqlParts.SQL_PARTS;

    /**
     * The table <code>information_schema.sql_sizing</code>.
     */
    public final SqlSizing SQL_SIZING = com.example.postgresqinformationschema.tables.SqlSizing.SQL_SIZING;

    /**
     * The table <code>information_schema.sql_sizing_profiles</code>.
     */
    public final SqlSizingProfiles SQL_SIZING_PROFILES = com.example.postgresqinformationschema.tables.SqlSizingProfiles.SQL_SIZING_PROFILES;

    /**
     * The table <code>information_schema.table_constraints</code>.
     */
    public final TableConstraints TABLE_CONSTRAINTS = com.example.postgresqinformationschema.tables.TableConstraints.TABLE_CONSTRAINTS;

    /**
     * The table <code>information_schema.table_privileges</code>.
     */
    public final TablePrivileges TABLE_PRIVILEGES = com.example.postgresqinformationschema.tables.TablePrivileges.TABLE_PRIVILEGES;

    /**
     * The table <code>information_schema.tables</code>.
     */
    public final Tables TABLES = com.example.postgresqinformationschema.tables.Tables.TABLES;

    /**
     * The table <code>information_schema.transforms</code>.
     */
    public final Transforms TRANSFORMS = com.example.postgresqinformationschema.tables.Transforms.TRANSFORMS;

    /**
     * The table <code>information_schema.triggered_update_columns</code>.
     */
    public final TriggeredUpdateColumns TRIGGERED_UPDATE_COLUMNS = com.example.postgresqinformationschema.tables.TriggeredUpdateColumns.TRIGGERED_UPDATE_COLUMNS;

    /**
     * The table <code>information_schema.triggers</code>.
     */
    public final Triggers TRIGGERS = com.example.postgresqinformationschema.tables.Triggers.TRIGGERS;

    /**
     * The table <code>information_schema.udt_privileges</code>.
     */
    public final UdtPrivileges UDT_PRIVILEGES = com.example.postgresqinformationschema.tables.UdtPrivileges.UDT_PRIVILEGES;

    /**
     * The table <code>information_schema.usage_privileges</code>.
     */
    public final UsagePrivileges USAGE_PRIVILEGES = com.example.postgresqinformationschema.tables.UsagePrivileges.USAGE_PRIVILEGES;

    /**
     * The table <code>information_schema.user_defined_types</code>.
     */
    public final UserDefinedTypes USER_DEFINED_TYPES = com.example.postgresqinformationschema.tables.UserDefinedTypes.USER_DEFINED_TYPES;

    /**
     * The table <code>information_schema.user_mapping_options</code>.
     */
    public final UserMappingOptions USER_MAPPING_OPTIONS = com.example.postgresqinformationschema.tables.UserMappingOptions.USER_MAPPING_OPTIONS;

    /**
     * The table <code>information_schema.user_mappings</code>.
     */
    public final UserMappings USER_MAPPINGS = com.example.postgresqinformationschema.tables.UserMappings.USER_MAPPINGS;

    /**
     * The table <code>information_schema.view_column_usage</code>.
     */
    public final ViewColumnUsage VIEW_COLUMN_USAGE = com.example.postgresqinformationschema.tables.ViewColumnUsage.VIEW_COLUMN_USAGE;

    /**
     * The table <code>information_schema.view_routine_usage</code>.
     */
    public final ViewRoutineUsage VIEW_ROUTINE_USAGE = com.example.postgresqinformationschema.tables.ViewRoutineUsage.VIEW_ROUTINE_USAGE;

    /**
     * The table <code>information_schema.views</code>.
     */
    public final Views VIEWS = com.example.postgresqinformationschema.tables.Views.VIEWS;

    /**
     * The table <code>information_schema.view_table_usage</code>.
     */
    public final ViewTableUsage VIEW_TABLE_USAGE = com.example.postgresqinformationschema.tables.ViewTableUsage.VIEW_TABLE_USAGE;

    /**
     * No further instances allowed
     */
    private InformationSchema() {
        super("information_schema", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            AdministrableRoleAuthorizations.ADMINISTRABLE_ROLE_AUTHORIZATIONS,
            ApplicableRoles.APPLICABLE_ROLES,
            Attributes.ATTRIBUTES,
            CharacterSets.CHARACTER_SETS,
            CheckConstraintRoutineUsage.CHECK_CONSTRAINT_ROUTINE_USAGE,
            CheckConstraints.CHECK_CONSTRAINTS,
            CollationCharacterSetApplicability.COLLATION_CHARACTER_SET_APPLICABILITY,
            Collations.COLLATIONS,
            ColumnDomainUsage.COLUMN_DOMAIN_USAGE,
            ColumnOptions.COLUMN_OPTIONS,
            ColumnPrivileges.COLUMN_PRIVILEGES,
            Columns.COLUMNS,
            ColumnUdtUsage.COLUMN_UDT_USAGE,
            ConstraintColumnUsage.CONSTRAINT_COLUMN_USAGE,
            ConstraintTableUsage.CONSTRAINT_TABLE_USAGE,
            DataTypePrivileges.DATA_TYPE_PRIVILEGES,
            DomainConstraints.DOMAIN_CONSTRAINTS,
            Domains.DOMAINS,
            DomainUdtUsage.DOMAIN_UDT_USAGE,
            ElementTypes.ELEMENT_TYPES,
            EnabledRoles.ENABLED_ROLES,
            ForeignDataWrapperOptions.FOREIGN_DATA_WRAPPER_OPTIONS,
            ForeignDataWrappers.FOREIGN_DATA_WRAPPERS,
            ForeignServerOptions.FOREIGN_SERVER_OPTIONS,
            ForeignServers.FOREIGN_SERVERS,
            ForeignTableOptions.FOREIGN_TABLE_OPTIONS,
            ForeignTables.FOREIGN_TABLES,
            InformationSchemaCatalogName.INFORMATION_SCHEMA_CATALOG_NAME,
            KeyColumnUsage.KEY_COLUMN_USAGE,
            Parameters.PARAMETERS,
            _PgExpandarray._PG_EXPANDARRAY,
            _PgForeignDataWrappers._PG_FOREIGN_DATA_WRAPPERS,
            _PgForeignServers._PG_FOREIGN_SERVERS,
            _PgForeignTableColumns._PG_FOREIGN_TABLE_COLUMNS,
            _PgForeignTables._PG_FOREIGN_TABLES,
            _PgUserMappings._PG_USER_MAPPINGS,
            ReferentialConstraints.REFERENTIAL_CONSTRAINTS,
            RoleColumnGrants.ROLE_COLUMN_GRANTS,
            RoleRoutineGrants.ROLE_ROUTINE_GRANTS,
            RoleTableGrants.ROLE_TABLE_GRANTS,
            RoleUdtGrants.ROLE_UDT_GRANTS,
            RoleUsageGrants.ROLE_USAGE_GRANTS,
            RoutinePrivileges.ROUTINE_PRIVILEGES,
            Routines.ROUTINES,
            Schemata.SCHEMATA,
            Sequences.SEQUENCES,
            SqlFeatures.SQL_FEATURES,
            SqlImplementationInfo.SQL_IMPLEMENTATION_INFO,
            SqlLanguages.SQL_LANGUAGES,
            SqlPackages.SQL_PACKAGES,
            SqlParts.SQL_PARTS,
            SqlSizing.SQL_SIZING,
            SqlSizingProfiles.SQL_SIZING_PROFILES,
            TableConstraints.TABLE_CONSTRAINTS,
            TablePrivileges.TABLE_PRIVILEGES,
            Tables.TABLES,
            Transforms.TRANSFORMS,
            TriggeredUpdateColumns.TRIGGERED_UPDATE_COLUMNS,
            Triggers.TRIGGERS,
            UdtPrivileges.UDT_PRIVILEGES,
            UsagePrivileges.USAGE_PRIVILEGES,
            UserDefinedTypes.USER_DEFINED_TYPES,
            UserMappingOptions.USER_MAPPING_OPTIONS,
            UserMappings.USER_MAPPINGS,
            ViewColumnUsage.VIEW_COLUMN_USAGE,
            ViewRoutineUsage.VIEW_ROUTINE_USAGE,
            Views.VIEWS,
            ViewTableUsage.VIEW_TABLE_USAGE);
    }
}
